{"version":3,"sources":["Products/Component/IndexPage.jsx","Products/Component/Pagination.jsx","Products/Component/modal/confirm.js","Products/Products.jsx","API/axiosClient.jsx","API/ProductAPI.jsx"],"names":["IndexPage","props","indexPage","handlerChangePage","pagination","page","console","log","_jsx","className","children","map","value","parseInt","onClick","onIndexPage","defaultProps","Pagination","totalPage","i","push","_jsxs","newPage","onDownPage","disabled","onUpPage","Confirm","style","position","width","texAlign","top","left","boxShadow","zIndex","background","border","padding","textAlign","onConfirm","id","onCancel","socket","require","io","Products","products","setProducts","useState","openConfirm","setOpenConfirm","setId","setPagination","count","search","category","setSearch","setTotalPage","useEffect","async","response","ProductAPI","getAPI","Math","ceil","length","fetchAllData","fetchData","params","newQuery","queryString","stringify","getPagination","on","data","message","_Fragment","deleteProduct","alertify","set","success","href","onChange","e","target","type","placeholder","_id","name","price","src","img1","height","alt","quantity","Link","to","concat","cursor","color","deleteHandler","axiosClient","axios","create","baseURL","headers","paramsSerializer","interceptors","request","use","token","localStorage","getItem","config","Authorization","FormData","error","get","getCategory","query","url","getDetail","postNewProduct","body","post","postUpdateProduct","delete"],"mappings":"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","file":"static/js/11.c916d957.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nIndexPage.propTypes = {\n\tindexPage: PropTypes.array,\n\thandlerChangePage: PropTypes.func,\n\tpagination: PropTypes.object,\n};\n\nIndexPage.defaultProps = {\n\tindexPage: null,\n\thandlerChangePage: null,\n\tpagination: {},\n};\n\nfunction IndexPage(props) {\n\tconst { indexPage, handlerChangePage, pagination } = props;\n\n\tconst { page } = pagination;\n\n\tconst onIndexPage = (value) => {\n\t\tif (!handlerChangePage) {\n\t\t\treturn;\n\t\t}\n\n\t\thandlerChangePage(value);\n\t};\n\n\tconsole.log(indexPage);\n\n\treturn (\n\t\t<div className='d-flex'>\n\t\t\t{indexPage &&\n\t\t\t\tindexPage.map((value) => (\n\t\t\t\t\t<li\n\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\tvalue === parseInt(page) ? 'page-item active' : 'page-item'\n\t\t\t\t\t\t}\n\t\t\t\t\t\tkey={value}\n\t\t\t\t\t\tonClick={() => onIndexPage(value)}>\n\t\t\t\t\t\t<a className='page-link'>{value}</a>\n\t\t\t\t\t</li>\n\t\t\t\t))}\n\t\t</div>\n\t);\n}\n\nexport default IndexPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport IndexPage from './IndexPage';\n\nPagination.propTypes = {\n\tpagination: PropTypes.object,\n\thandlerChangePage: PropTypes.func,\n\ttotalPage: PropTypes.number,\n};\n\nPagination.defaultProps = {\n\tpagination: {},\n\thandlerChangePage: null,\n\ttotalPage: null,\n};\n\nfunction Pagination(props) {\n\tconst { pagination, handlerChangePage, totalPage } = props;\n\n\tconst { page } = pagination;\n\n\tlet indexPage = [];\n\n\t//Tạo ra số nút bấm cho từng trang\n\tfor (var i = 1; i <= totalPage; i++) {\n\t\tindexPage.push(i);\n\t}\n\n\tconst onDownPage = (value) => {\n\t\tif (!handlerChangePage) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst newPage = parseInt(value) - 1;\n\t\thandlerChangePage(newPage);\n\t};\n\n\tconst onUpPage = (value) => {\n\t\tif (!handlerChangePage) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst newPage = parseInt(value) + 1;\n\t\thandlerChangePage(newPage);\n\t};\n\n\treturn (\n\t\t<nav aria-label='Page navigation example' className='pt-5'>\n\t\t\t<ul className='pagination justify-content-center justify-content-lg-end'>\n\t\t\t\t<li className='page-item'>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName='page-link'\n\t\t\t\t\t\tonClick={() => onDownPage(page)}\n\t\t\t\t\t\tdisabled={page <= 1}>\n\t\t\t\t\t\t<span>«</span>\n\t\t\t\t\t</button>\n\t\t\t\t</li>\n\t\t\t\t<IndexPage\n\t\t\t\t\tindexPage={indexPage}\n\t\t\t\t\thandlerChangePage={handlerChangePage}\n\t\t\t\t\tpagination={pagination}\n\t\t\t\t/>\n\t\t\t\t<li className='page-item'>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName='page-link'\n\t\t\t\t\t\tonClick={() => onUpPage(page)}\n\t\t\t\t\t\tdisabled={page >= totalPage}>\n\t\t\t\t\t\t<span>»</span>\n\t\t\t\t\t</button>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t\t<div className='pagination justify-content-center justify-content-lg-end'>\n\t\t\t\t<p className='text-small text-muted mb-0'>\n\t\t\t\t\tShowing 1–9 of {parseInt(totalPage) * 9} results\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</nav>\n\t);\n}\n\nexport default Pagination;\n","const Confirm = (props) => {\n  return (\n    <div\n      className=\"confirm\"\n      style={{\n        position: \"fixed\",\n        width: \"300px\",\n        texAlign: \"center\",\n        top: \" 40%\",\n        left: \"50%\",\n        boxShadow: \"3px 1px 1px 1px #c9c9c9 \",\n        zIndex: \"100\",\n        background: \"white\",\n        border: \"1px solid #c9c9c9\",\n      }}\n    >\n      <div className=\"content\" style={{ padding: \"20px\", textAlign: \"center\" }}>\n        <p>Are you sure?</p>\n        <button\n          className=\"btn btn-danger\"\n          onClick={() => props.onConfirm(props.id)}\n          // style={{ border: \"1px solid black\" }}\n        >\n          Yes\n        </button>\n        &nbsp;\n        <button className=\"btn btn-success\" onClick={props.onCancel}>\n          No\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Confirm;\n","import React, { useEffect, useState } from \"react\";\nimport queryString from \"query-string\";\nimport ProductAPI from \"../API/ProductAPI\";\nimport Pagination from \"./Component/Pagination\";\nimport Confirm from \"./Component/modal/confirm\";\nimport { Link } from \"react-router-dom\";\nimport alertify from \"alertifyjs\";\nconst io = require(\"socket.io-client\");\nconst socket = io(\"http://localhost:5000\");\n\nfunction Products(props) {\n  const [products, setProducts] = useState([]);\n  const [openConfirm, setOpenConfirm] = useState(false);\n  const [id, setId] = useState();\n  const [pagination, setPagination] = useState({\n    page: \"1\",\n    count: \"8\",\n    search: \"\",\n    category: \"all\",\n  });\n\n  const [search, setSearch] = useState(\"\");\n\n  const onChangeText = (e) => {\n    const value = e.target.value;\n\n    setPagination({\n      page: pagination.page,\n      count: pagination.count,\n      search: value,\n      category: pagination.category,\n    });\n  };\n\n  //Tổng số trang\n  const [totalPage, setTotalPage] = useState();\n\n  //Hàm này dùng để thay đổi state pagination.page\n  //Nó sẽ truyền xuống Component con và nhận dữ liệu từ Component con truyền lên\n  const handlerChangePage = (value) => {\n    console.log(\"Value: \", value);\n\n    //Sau đó set lại cái pagination để gọi chạy làm useEffect gọi lại API pagination\n    setPagination({\n      page: value,\n      count: pagination.count,\n      search: pagination.search,\n      category: pagination.category,\n    });\n  };\n\n  //Gọi hàm useEffect tìm tổng số sản phẩm để tính tổng số trang\n  //Và nó phụ thuộc và state pagination\n  useEffect(() => {\n    const fetchAllData = async () => {\n      const result = await ProductAPI.getAPI();\n      const response = result.products;\n      console.log(response);\n\n      //Tính tổng số trang = tổng số sản phẩm / số lượng sản phẩm 1 trang\n      const totalPage = Math.ceil(\n        parseInt(response.length) / parseInt(pagination.count)\n      );\n      console.log(\"totalpage\", totalPage);\n\n      setTotalPage(totalPage);\n    };\n\n    fetchAllData();\n  }, [pagination]);\n\n  //Gọi hàm Pagination\n  const fetchData = async () => {\n    const params = {\n      page: pagination.page,\n      count: pagination.count,\n      search: pagination.search,\n      category: pagination.category,\n    };\n    console.log(params);\n    const query = queryString.stringify(params);\n\n    const newQuery = \"?\" + query;\n\n    const result = await ProductAPI.getPagination(newQuery);\n    const response = result.products;\n    console.log(\"pagination\", response);\n\n    setProducts(response);\n  };\n  useEffect(() => {\n    fetchData();\n  }, [pagination]);\n  // hàm xoá sản phẩm\n  const deleteHandler = (id) => {\n    console.log(\"open\");\n    setOpenConfirm(true);\n    setId(id);\n  };\n  //Xác nhận xoá\n  const onConfirm = async (id) => {\n    setOpenConfirm(false);\n    const response = await ProductAPI.deleteProduct(id);\n    alertify.set(\"notifier\", \"position\", \"bottom-left\");\n    alertify.success(response.message);\n    fetchData();\n  };\n  // Xác nhận huỷ, không xoá\n  const onCancel = () => {\n    setOpenConfirm(false);\n  };\n  // nhận tín hiệu cập nhật số lượng từ server\n  useEffect(() => {\n    socket.on(\"update_quantity\", (data) => {\n      console.log(data.message);\n      fetchData();\n    });\n  }, []);\n  return (\n    <>\n      {openConfirm && (\n        <Confirm id={id} onConfirm={onConfirm} onCancel={onCancel} />\n      )}\n      <div className=\"page-wrapper\">\n        <div className=\"page-breadcrumb\">\n          <div className=\"row\">\n            <div className=\"col-7 align-self-center\">\n              <h4 className=\"page-title text-truncate text-dark font-weight-medium mb-1\">\n                Basic Initialisation\n              </h4>\n              <div className=\"d-flex align-items-center\">\n                <nav aria-label=\"breadcrumb\">\n                  <ol className=\"breadcrumb m-0 p-0\">\n                    <li className=\"breadcrumb-item\">\n                      <a href=\"/\" className=\"text-muted\">\n                        Home\n                      </a>\n                    </li>\n                    <li\n                      className=\"breadcrumb-item text-muted active\"\n                      aria-current=\"page\"\n                    >\n                      Table\n                    </li>\n                  </ol>\n                </nav>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <h4 className=\"card-title\">Products</h4>\n                  <input\n                    className=\"form-control w-25\"\n                    onChange={onChangeText}\n                    type=\"text\"\n                    placeholder=\"Enter Search!\"\n                  />\n                  <br />\n                  <div className=\"table-responsive\">\n                    <table className=\"table table-striped table-bordered no-wrap\">\n                      <thead>\n                        <tr>\n                          <th>ID</th>\n                          <th>Name</th>\n                          <th>Price</th>\n                          <th>Image</th>\n                          <th>Category</th>\n                          <th>Quantity</th>\n                          <th>Edit</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {products &&\n                          products.map((value) => (\n                            <tr key={value._id}>\n                              <td>{value._id}</td>\n                              <td>{value.name}</td>\n                              <td>{value.price}</td>\n                              <td>\n                                <img\n                                  src={value.img1}\n                                  style={{\n                                    height: \"60px\",\n                                    width: \"60px\",\n                                  }}\n                                  alt=\"\"\n                                />\n                              </td>\n                              <td>{value.category}</td>\n                              <td>{value.quantity}</td>\n                              <td>\n                                <input\n                                  type=\"hidden\"\n                                  value={value._id}\n                                  name=\"id\"\n                                />\n                                <Link\n                                  to={`/update/${value._id}`}\n                                  style={{\n                                    cursor: \"pointer\",\n                                    color: \"white\",\n                                  }}\n                                  className=\"btn btn-success\"\n                                >\n                                  Update\n                                </Link>\n                                &nbsp;\n                                <a\n                                  style={{\n                                    cursor: \"pointer\",\n                                    color: \"white\",\n                                  }}\n                                  onClick={() => deleteHandler(value._id)}\n                                  className=\"btn btn-danger\"\n                                >\n                                  Delete\n                                </a>\n                              </td>\n                            </tr>\n                          ))}\n                      </tbody>\n                    </table>\n                    <Pagination\n                      pagination={pagination}\n                      handlerChangePage={handlerChangePage}\n                      totalPage={totalPage}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <footer className=\"footer text-center text-muted\"></footer>\n      </div>{\" \"}\n    </>\n  );\n}\n\nexport default Products;\n","// api/axiosClient.js\nimport axios from \"axios\";\nimport queryString from \"query-string\";\n// Set up default config for http requests here\n// Please have a look at here `https://github.com/axios/axios#requestconfig` for the full list of configs\nconst axiosClient = axios.create({\n  baseURL: \"http://localhost:5000/admin\",\n  headers: {\n    \"content-type\": \"application/json\",\n  },\n  paramsSerializer: (params) => queryString.stringify(params),\n});\naxiosClient.interceptors.request.use(async (config) => {\n  // Handle token here ...\n  const token = localStorage.getItem(\"token\");\n\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  // Check if the request is for multipart/form-data\n  if (config.data instanceof FormData) {\n    delete config.headers[\"content-type\"]; // Remove content-type header for FormData\n  }\n\n  return config;\n});\naxiosClient.interceptors.response.use(\n  (response) => {\n    if (response && response.data) {\n      return response.data;\n    }\n    return response;\n  },\n  (error) => {\n    // Handle errors\n    throw error;\n  }\n);\nexport default axiosClient;\n","import axiosClient from \"./axiosClient\";\n\nconst ProductAPI = {\n  getAPI: () => {\n    const url = \"/products\";\n    return axiosClient.get(url);\n  },\n\n  getCategory: (query) => {\n    const url = `/products/category${query}`;\n    return axiosClient.get(url);\n  },\n\n  getDetail: (id) => {\n    const url = `/products/${id}`;\n    return axiosClient.get(url);\n  },\n  postNewProduct: (body) => {\n    const url = \"/add-product\";\n    return axiosClient.post(url, body);\n  },\n  postUpdateProduct: (id, body) => {\n    const url = `/products/update/${id}`;\n    return axiosClient.post(url, body);\n  },\n  getPagination: (query) => {\n    const url = `/products/pagination${query}`;\n    return axiosClient.get(url);\n  },\n  deleteProduct: (id) => {\n    const url = `/products/delete/${id}`;\n    return axiosClient.delete(url);\n  },\n};\n\nexport default ProductAPI;\n"],"sourceRoot":""}