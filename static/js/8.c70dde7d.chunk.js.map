{"version":3,"sources":["History/History.jsx","API/axiosClient.jsx","API/HistoryAPI.jsx"],"names":["socket","io","transports","History","props","history","setHistory","useState","load","setLoad","text","setText","useEffect","async","response","HistoryAPI","getAll","console","log","orders","fetchData","on","data","setTimeout","window","location","reload","_jsxs","className","children","_jsx","href","type","placeholder","map","value","user","_id","fullname","phone","address","total","delivery","status","style","cursor","color","axiosClient","axios","create","baseURL","headers","paramsSerializer","params","queryString","stringify","interceptors","request","use","token","localStorage","getItem","config","Authorization","concat","FormData","error","getHistoryAPI","query","url","get","getDetail","id"],"mappings":"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","file":"static/js/8.c70dde7d.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport HistoryAPI from \"../API/HistoryAPI\";\n\nimport io from \"socket.io-client\";\nconst socket = io(\"http://localhost:5000/admin\", { transports: [\"websocket\"] });\n\nfunction History(props) {\n  const [history, setHistory] = useState([]);\n\n  const [load, setLoad] = useState(false);\n\n  const [text, setText] = useState(\"\");\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await HistoryAPI.getAll();\n      console.log(\"response\");\n      console.log(response.orders);\n\n      setHistory(response.orders);\n      console.log(\"history\");\n    };\n\n    fetchData();\n  }, []);\n\n  //Hàm này dùng để nhận socket từ server gửi lên\n  useEffect(() => {\n    //Nhận dữ liệu từ server gửi lên thông qua socket với key receive_order\n    socket.on(\"receive_order\", (data) => {\n      setText(\"User ID: \" + data + \" Vừa Đặt Hàng\");\n\n      setTimeout(() => {\n        window.location.reload();\n      }, 4000);\n    });\n  }, []);\n\n  return (\n    <div className=\"page-wrapper\">\n      <div className=\"page-breadcrumb\">\n        <div className=\"row\">\n          <div className=\"col-7 align-self-center\">\n            <h4 className=\"page-title text-truncate text-dark font-weight-medium mb-1\">\n              Basic Initialisation\n            </h4>\n            <div className=\"d-flex align-items-center\">\n              <nav aria-label=\"breadcrumb\">\n                <ol className=\"breadcrumb m-0 p-0\">\n                  <li className=\"breadcrumb-item\">\n                    <a href=\"/\" className=\"text-muted\">\n                      History\n                    </a>\n                  </li>\n                  <li\n                    className=\"breadcrumb-item text-muted active\"\n                    aria-current=\"page\"\n                  >\n                    Table\n                  </li>\n                </ol>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <h4 className=\"card-title\">History</h4>\n                <h3>{text}</h3>\n                <input\n                  className=\"form-control w-25\"\n                  type=\"text\"\n                  placeholder=\"Enter Search!\"\n                />\n                <br />\n                <div className=\"table-responsive\">\n                  <table className=\"table table-striped table-bordered no-wrap\">\n                    <thead>\n                      <tr>\n                        <th>ID User</th>\n                        <th>Name</th>\n                        <th>Phone</th>\n                        <th>Address</th>\n                        <th>Total</th>\n                        <th>Delivery</th>\n                        <th>Status</th>\n                        <th>Detail</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {history &&\n                        history.map((value) => (\n                          <tr key={value._id}>\n                            <td>{value.user._id}</td>\n                            <td>{value.user.fullname}</td>\n                            <td>{value.user.phone}</td>\n                            <td>{value.user.address}</td>\n                            <td>{value.total}</td>\n                            <td>\n                              {value.delivery\n                                ? \"Đã Vận Chuyển\"\n                                : \"Chưa Vận Chuyển\"}\n                            </td>\n                            <td>\n                              {value.status\n                                ? \"Đã Thanh Toán\"\n                                : \"Chưa Thanh Toán\"}\n                            </td>\n                            <td>\n                              <a\n                                style={{\n                                  cursor: \"pointer\",\n                                  color: \"white\",\n                                }}\n                                className=\"btn btn-success\"\n                              >\n                                View\n                              </a>\n                            </td>\n                          </tr>\n                        ))}\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <footer className=\"footer text-center text-muted\"></footer>\n    </div>\n  );\n}\n\nexport default History;\n","// api/axiosClient.js\nimport axios from \"axios\";\nimport queryString from \"query-string\";\n// Set up default config for http requests here\n// Please have a look at here `https://github.com/axios/axios#requestconfig` for the full list of configs\nconst axiosClient = axios.create({\n  baseURL: \"http://localhost:5000/admin\",\n  headers: {\n    \"content-type\": \"application/json\",\n  },\n  paramsSerializer: (params) => queryString.stringify(params),\n});\naxiosClient.interceptors.request.use(async (config) => {\n  // Handle token here ...\n  const token = localStorage.getItem(\"token\");\n\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  // Check if the request is for multipart/form-data\n  if (config.data instanceof FormData) {\n    delete config.headers[\"content-type\"]; // Remove content-type header for FormData\n  }\n\n  return config;\n});\naxiosClient.interceptors.response.use(\n  (response) => {\n    if (response && response.data) {\n      return response.data;\n    }\n    return response;\n  },\n  (error) => {\n    // Handle errors\n    throw error;\n  }\n);\nexport default axiosClient;\n","import axiosClient from './axiosClient';\n\nconst HistoryAPI = {\n\tgetHistoryAPI: (query) => {\n\t\tconst url = `/histories${query}`;\n\t\treturn axiosClient.get(url);\n\t},\n\n\tgetDetail: (id) => {\n\t\tconst url = `/histories/${id}`;\n\t\treturn axiosClient.get(url);\n\t},\n\n\tgetAll: () => {\n\t\tconst url = '/histories/all';\n\t\treturn axiosClient.get(url);\n\t},\n};\n\nexport default HistoryAPI;\n"],"sourceRoot":""}