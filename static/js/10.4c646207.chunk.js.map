{"version":3,"sources":["New/NewProduct.jsx","API/axiosClient.jsx","API/ProductAPI.jsx"],"names":["NewProduct","productName","setProductName","useState","productCategory","setProductCategory","productPrice","setProductPrice","productQuantity","setProductQuantity","shortDesc","setShortDesc","longDesc","setLongDesc","errorName","setErrorName","errorCategory","setErrorCategory","errorPrice","setErrorPrice","errorQuantity","setErrorQuantity","errorShortDesc","setErrorShortDesc","errorLongDesc","setErrorLongDesc","redirect","setRedirect","productId","useParams","path","useLocation","pathname","console","log","concat","async","product","ProductAPI","getDetail","name","category","Number","price","quantity","short_desc","long_desc","fetchDetail","_jsx","Redirect","to","className","children","_jsxs","onSubmit","e","preventDefault","trim","data","FormData","target","message","response","postUpdateProduct","updateProduct","postNewProduct","addProduct","alertify","set","success","setTimeout","style","width","marginLeft","encType","type","placeholder","defaultValue","onChange","event","value","color","fontSize","textAlign","min","rows","htmlFor","id","multiple","disabled","axiosClient","axios","create","baseURL","headers","paramsSerializer","params","queryString","stringify","interceptors","request","use","token","localStorage","getItem","config","Authorization","error","getAPI","get","getCategory","query","url","body","post","getPagination","deleteProduct","delete"],"mappings":"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","file":"static/js/10.4c646207.chunk.js","sourcesContent":["import ProductAPI from \"../API/ProductAPI\";\nimport { useState } from \"react\";\nimport { useLocation, useParams, Redirect } from \"react-router-dom\";\nimport alertify from \"alertifyjs\";\n\nconst NewProduct = () => {\n  const [productName, setProductName] = useState(\"\");\n  const [productCategory, setProductCategory] = useState(\"\");\n  const [productPrice, setProductPrice] = useState(\"\");\n  const [productQuantity, setProductQuantity] = useState(\"\");\n  const [shortDesc, setShortDesc] = useState(\"\");\n  const [longDesc, setLongDesc] = useState(\"\");\n  const [errorName, setErrorName] = useState(false);\n  const [errorCategory, setErrorCategory] = useState(false);\n  const [errorPrice, setErrorPrice] = useState(false);\n  const [errorQuantity, setErrorQuantity] = useState(false);\n  const [errorShortDesc, setErrorShortDesc] = useState(false);\n  const [errorLongDesc, setErrorLongDesc] = useState(false);\n\n  const [redirect, setRedirect] = useState();\n  const { productId } = useParams();\n  const location = useLocation();\n  const path = location.pathname;\n  console.log(path);\n  // điều kiện: nếu path là update thì hiển thị trang edit với thông tin sản phẩm có sẵn\n  if (path === `/update/${productId}`) {\n    const fetchDetail = async () => {\n      const response = await ProductAPI.getDetail(productId);\n      const product = response.product;\n      setProductName(product.name);\n      setProductCategory(product.category);\n      setProductPrice(Number(product.price));\n      setProductQuantity(product.quantity);\n      setShortDesc(product.short_desc);\n      setLongDesc(product.long_desc);\n    };\n    fetchDetail();\n  }\n  // hàm nộp thông tin sản phẩm mới/ hoặc sau khi edit thông tin cũ\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (productName.trim() === \"\") {\n      setErrorName(true);\n    } else {\n      setErrorName(false);\n      if (productCategory.trim() === \"\") {\n        setErrorCategory(true);\n      } else {\n        setErrorCategory(false);\n        if (productPrice === \"\") {\n          setErrorPrice(true);\n        } else {\n          setErrorPrice(false);\n          if (productQuantity === \"\") {\n            setErrorQuantity(true);\n          } else {\n            setErrorQuantity(false);\n            if (shortDesc.trim() === \"\") {\n              setErrorShortDesc(true);\n            } else {\n              setErrorShortDesc(false);\n              if (longDesc.trim() === \"\") {\n                setErrorShortDesc(true);\n              } else {\n                setErrorLongDesc(false);\n                console.log(\"kiểm duyệt thành công\");\n                const data = new FormData(e.target);\n\n                console.log(data);\n                let message;\n                if (path === `/update/${productId}`) {\n                  const updateProduct = async () => {\n                    const response = await ProductAPI.postUpdateProduct(\n                      productId,\n                      data\n                    );\n                    message = response.message;\n                    console.log(message);\n                  };\n                  updateProduct();\n                }\n                if (path === \"/new\") {\n                  const addProduct = async () => {\n                    const response = await ProductAPI.postNewProduct(data);\n                    message = response.message;\n                    console.log(message);\n                    setProductName(\"\");\n                    setProductCategory(\"\");\n                    setProductPrice(\"\");\n                    setProductQuantity(\"\");\n                    setShortDesc(\"\");\n                    setLongDesc(\"\");\n                  };\n                  addProduct();\n                }\n\n                alertify.set(\"notifier\", \"position\", \"bottom-left\");\n                message && alertify.success(message);\n                //sau 2 giây, chuyển trang\n                setTimeout(() => {\n                  setRedirect(true); // Redirect after a short delay\n                }, 2000);\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n  if (redirect) {\n    return <Redirect to=\"/products\" />;\n  }\n  return (\n    <div className=\"page-wrapper\">\n      <div className=\"page-breadcrumb\">\n        <div className=\"row\">\n          <form\n            onSubmit={submitHandler}\n            style={{ width: \"50%\", marginLeft: \"40px\" }}\n            encType=\"multipart/form-data\"\n          >\n            <div className=\"form-group\">\n              <label>Product Name</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"name\"\n                placeholder=\"Enter Product Name\"\n                defaultValue={productName}\n                onChange={(event) => setProductName(event.target.value)}\n              />\n              {errorName && (\n                <p\n                  style={{\n                    color: \"red\",\n                    fontSize: \"10px\",\n                    textAlign: \"center\",\n                  }}\n                >\n                  Please enter the product name\n                </p>\n              )}\n            </div>\n            <div className=\"form-group\">\n              <label>Category</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"category\"\n                placeholder=\"Enter Category\"\n                defaultValue={productCategory}\n                onChange={(event) => setProductCategory(event.target.value)}\n              />\n              {errorCategory && (\n                <p\n                  style={{\n                    color: \"red\",\n                    fontSize: \"10px\",\n                    textAlign: \"center\",\n                  }}\n                >\n                  Please enter the product category\n                </p>\n              )}\n            </div>\n            <div className=\"form-group\">\n              <label>Price</label>\n              <input\n                type=\"number\"\n                className=\"form-control\"\n                name=\"price\"\n                placeholder=\"Enter Price\"\n                defaultValue={productPrice}\n                onChange={(event) => setProductPrice(event.target.value)}\n                min=\"0\"\n              />\n              {errorPrice && (\n                <p\n                  style={{\n                    color: \"red\",\n                    fontSize: \"10px\",\n                    textAlign: \"center\",\n                  }}\n                >\n                  Please enter the product price\n                </p>\n              )}\n            </div>\n            <div className=\"form-group\">\n              <label>Quantity</label>\n              <input\n                type=\"number\"\n                className=\"form-control\"\n                name=\"quantity\"\n                placeholder=\"Enter Price\"\n                defaultValue={productQuantity}\n                onChange={(event) => setProductQuantity(event.target.value)}\n                min=\"0\"\n              />\n              {errorQuantity && (\n                <p\n                  style={{\n                    color: \"red\",\n                    fontSize: \"10px\",\n                    textAlign: \"center\",\n                  }}\n                >\n                  Please enter the number of products you have currently.\n                </p>\n              )}\n            </div>\n            <div className=\"form-group\">\n              <label>Short Description</label>\n              <textarea\n                className=\"form-control\"\n                rows=\"3\"\n                name=\"short_desc\"\n                placeholder=\"Enter Short Description\"\n                defaultValue={shortDesc}\n                onChange={(event) => setShortDesc(event.target.value)}\n              ></textarea>\n              {errorShortDesc && (\n                <p\n                  style={{\n                    color: \"red\",\n                    fontSize: \"10px\",\n                    textAlign: \"center\",\n                  }}\n                >\n                  Please enter short description of the product\n                </p>\n              )}\n            </div>\n            <div className=\"form-group\">\n              <label>Long Description</label>\n              <textarea\n                className=\"form-control\"\n                rows=\"6\"\n                name=\"long_desc\"\n                placeholder=\"Enter Long Description\"\n                defaultValue={longDesc}\n                onChange={(event) => setLongDesc(event.target.value)}\n              ></textarea>\n              {errorLongDesc && (\n                <p\n                  style={{\n                    color: \"red\",\n                    fontSize: \"10px\",\n                    textAlign: \"center\",\n                  }}\n                >\n                  Please enter long description of the product\n                </p>\n              )}\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"exampleFormControlFile1\">\n                Upload image (5 images)\n              </label>\n              <input\n                type=\"file\"\n                name=\"image\"\n                className=\"form-control-file\"\n                id=\"exampleFormControlFile1\"\n                multiple\n                disabled={path === `/update/${productId}`}\n              />\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Submit\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NewProduct;\n","// api/axiosClient.js\nimport axios from \"axios\";\nimport queryString from \"query-string\";\n// Set up default config for http requests here\n// Please have a look at here `https://github.com/axios/axios#requestconfig` for the full list of configs\nconst axiosClient = axios.create({\n  baseURL: \"http://localhost:5000/admin\",\n  headers: {\n    \"content-type\": \"application/json\",\n  },\n  paramsSerializer: (params) => queryString.stringify(params),\n});\naxiosClient.interceptors.request.use(async (config) => {\n  // Handle token here ...\n  const token = localStorage.getItem(\"token\");\n\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  // Check if the request is for multipart/form-data\n  if (config.data instanceof FormData) {\n    delete config.headers[\"content-type\"]; // Remove content-type header for FormData\n  }\n\n  return config;\n});\naxiosClient.interceptors.response.use(\n  (response) => {\n    if (response && response.data) {\n      return response.data;\n    }\n    return response;\n  },\n  (error) => {\n    // Handle errors\n    throw error;\n  }\n);\nexport default axiosClient;\n","import axiosClient from \"./axiosClient\";\n\nconst ProductAPI = {\n  getAPI: () => {\n    const url = \"/products\";\n    return axiosClient.get(url);\n  },\n\n  getCategory: (query) => {\n    const url = `/products/category${query}`;\n    return axiosClient.get(url);\n  },\n\n  getDetail: (id) => {\n    const url = `/products/${id}`;\n    return axiosClient.get(url);\n  },\n  postNewProduct: (body) => {\n    const url = \"/add-product\";\n    return axiosClient.post(url, body);\n  },\n  postUpdateProduct: (id, body) => {\n    const url = `/products/update/${id}`;\n    return axiosClient.post(url, body);\n  },\n  getPagination: (query) => {\n    const url = `/products/pagination${query}`;\n    return axiosClient.get(url);\n  },\n  deleteProduct: (id) => {\n    const url = `/products/delete/${id}`;\n    return axiosClient.delete(url);\n  },\n};\n\nexport default ProductAPI;\n"],"sourceRoot":""}